<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sys.spvisor.core.dao.message.TMessagePeopleMapMapper" >
  <resultMap id="BaseResultMap" type="sys.spvisor.core.entity.message.TMessagePeopleMap" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="msg_status" property="msgStatus" jdbcType="INTEGER" />
    <result column="read_time" property="readTime" jdbcType="TIMESTAMP" />
    <result column="msg_id" property="msgId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, msg_status, read_time, msg_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="sys.spvisor.core.entity.message.TMessagePeopleMapExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_message_people_map
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != -1">
		limit ${limit} offset ${offset}
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_message_people_map
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_message_people_map
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sys.spvisor.core.entity.message.TMessagePeopleMapExample" >
    delete from t_message_people_map
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sys.spvisor.core.entity.message.TMessagePeopleMap" useGeneratedKeys="true" keyProperty="id" >
    insert into t_message_people_map ( user_id, msg_status, 
      read_time, msg_id)
    values ( #{userId,jdbcType=INTEGER}, #{msgStatus,jdbcType=INTEGER}, 
      #{readTime,jdbcType=TIMESTAMP}, #{msgId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="sys.spvisor.core.entity.message.TMessagePeopleMap" >
    insert into t_message_people_map
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="msgStatus != null" >
        msg_status,
      </if>
      <if test="readTime != null" >
        read_time,
      </if>
      <if test="msgId != null" >
        msg_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="msgStatus != null" >
        #{msgStatus,jdbcType=INTEGER},
      </if>
      <if test="readTime != null" >
        #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="msgId != null" >
        #{msgId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sys.spvisor.core.entity.message.TMessagePeopleMapExample" resultType="java.lang.Integer" >
    select count(*) from t_message_people_map
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_message_people_map
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.msgStatus != null" >
        msg_status = #{record.msgStatus,jdbcType=INTEGER},
      </if>
      <if test="record.readTime != null" >
        read_time = #{record.readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_message_people_map
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      msg_status = #{record.msgStatus,jdbcType=INTEGER},
      read_time = #{record.readTime,jdbcType=TIMESTAMP},
      msg_id = #{record.msgId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sys.spvisor.core.entity.message.TMessagePeopleMap" >
    update t_message_people_map
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="msgStatus != null" >
        msg_status = #{msgStatus,jdbcType=INTEGER},
      </if>
      <if test="readTime != null" >
        read_time = #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="msgId != null" >
        msg_id = #{msgId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sys.spvisor.core.entity.message.TMessagePeopleMap" >
    update t_message_people_map
    set user_id = #{userId,jdbcType=INTEGER},
      msg_status = #{msgStatus,jdbcType=INTEGER},
      read_time = #{readTime,jdbcType=TIMESTAMP},
      msg_id = #{msgId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>