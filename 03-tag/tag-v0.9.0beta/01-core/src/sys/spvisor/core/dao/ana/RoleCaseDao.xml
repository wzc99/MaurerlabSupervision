<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sys.spvisor.core.dao.ana.RoleCaseDao">
	<resultMap type="RoleCase" id="resultMapRole">
		<id column="role_id" property="id" />
        <result column="role_name" property="name" />
        <result column="role_desc" property="desc" />
        <result column="status" property="status" />
        <result column="status_name" property="statusName" />
        <result column="module_code" property="moduleCode" />
        <result column="create_datetime" property="createDatetime" />
        <result column="update_datetime" property="updateDatetime" />
        <result property="caseUserId" 		column="case_operator"      />
		<result property="caseStatus" 		column="case_status"      />
		<result property="caseOpenStatus" 		column="case_open_status"      />
		<result property="caseTime" 		column="case_time"      />
		<result property="caseJudgment" 		column="case_judgment"      />
		<result property="realId" 				column="real_id"/>
		<result property="lastCompanyCaseId"    column="last_company_case_id"/>
		<result property="caseOwnerId" 			column="case_owner_id"/>
		<result property="caseStatusDes"		column="update_des"/>
	</resultMap>
	
	<insert id="insert" parameterType="Role" keyProperty="id" useGeneratedKeys="true">
    		insert into t_role_case
    			( role_name, status, role_desc,module_code, create_datetime, update_datetime, case_operator, case_status, case_open_status, case_time, case_judgment, real_id, last_company_case_id, case_owner_id)
    		values
    			( #{name}, #{status}, #{desc}, 'CONSOLE', current_timestamp, current_timestamp, #{caseUserId}, #{caseStatus}, #{caseOpenStatus}, current_timestamp, #{caseJudgment}, #{realId}, #{lastCompanyCaseId}, #{caseOwnerId})
   </insert>
   
   <update id="update" parameterType="Role">
    	update t_role_case set 
    	case_open_status = #{caseOpenStatus}
    	where role_id = #{id}
   </update>
   
   <delete id="deleteAllRoleMenu">
    	update t_role_menu_case set status='C' where role_id = #{roleId}
    </delete>
    
    <delete id="deleteAllRolePermission">
    	update t_role_permission_case set status='C' where role_id = #{roleId}
    </delete>
   
   <insert id="insertRoleMenu">
    	insert into t_role_menu_case ( role_id, menu_id, status)
    	values ( #{roleId}, #{menuId}, 'O')
    </insert>
    
    <insert id="insertRolePermission">
    	insert into t_role_permission_case ( role_id, permission_id, status)
    	values ( #{roleId}, #{permissionId}, 'O')
    </insert>
    
     <select id="getRolesByUserId" parameterType="long" resultMap="resultMapRole">
		select r.role_id, r.role_name, r.role_desc, r.status, r.module_code, r.create_datetime, r.update_datetime
			from t_role r, t_user_role_case ur
  			where r.role_id=ur.role_id and ur.user_id=#{userId} and r.status='O' and ur.status='O' and r.check_status='O'
          	order by r.role_id
	</select>
    
	<select id="query" parameterType="RoleCaseCriteria" resultMap="resultMapRole">
    	select r.role_id, r.role_name, r.status, rs.status_name, r.role_desc, r.module_code, r.create_datetime, r.update_datetime, r.case_operator, r.case_status, r.case_open_status, r.case_time, r.case_judgment, r.real_id, r.last_company_case_id, r.case_owner_id, c.update_des
			from t_role_case r join tk_role_status rs on r.status=rs.status join tk_check c on r.case_status=c.update_type
			<include refid="queryWhere"></include>	
		    order by r.role_id desc
		    <if test="paging == true">
		    	limit #{limit} offset #{offset}
		    </if>
    </select>
    
    <select id="queryCount" parameterType="RoleCaseCriteria" resultType="int">
    	select count(*) from t_role_case r join tk_role_status rs on r.status=rs.status 
		<include refid="queryWhere"></include>
    </select>
    
    <select id="getById" parameterType="Long" resultMap="resultMapRole">
		select r.role_id, r.role_name, r.role_desc, r.status, r.module_code, r.create_datetime, r.update_datetime, r.case_operator, r.case_status, r.case_open_status, r.case_time, r.case_judgment, r.real_id, r.last_company_case_id, r.case_owner_id, c.update_des
			from t_role_case r, tk_check c where r.role_id= #{id} and r.case_status=c.update_type and r.case_open_status='O'
	</select>
	
	<sql id="queryWhere">
		<where>
			<choose>
		        <when test="roleId != null">  
		            and r.role_id = #{roleId}  
		        </when>  
		        <when test="roleName != null">  
		            and r.role_name like  #{roleName}||'%'
		        </when>   
		    </choose>
		    <if test="caseOperator != null">
				and r.case_operator = #{caseOperator}
			</if>
		    <if test="caseStatus != null"> and 
    			<foreach collection="caseStatus"  item="item" index="index" open="(" separator=" or " close=")">
    			   r.case_status = #{item}
    			</foreach>
    		</if>
		      and r.case_open_status='O'
		</where>
	</sql>
</mapper>