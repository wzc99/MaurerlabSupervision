<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sys.spvisor.core.dao.work.TQualityReviewMapper" >
  <resultMap id="BaseResultMap" type="sys.spvisor.core.entity.work.TQualityReview" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pro_id" property="proId" jdbcType="INTEGER" />
    <result column="material_name" property="materialName" jdbcType="VARCHAR" />
    <result column="specifications" property="specifications" jdbcType="VARCHAR" />
    <result column="report_name" property="reportName" jdbcType="VARCHAR" />
    <result column="material_num" property="materialNum" jdbcType="VARCHAR" />
    <result column="check_result" property="checkResult" jdbcType="VARCHAR" />
    <result column="check_date" property="checkDate" jdbcType="TIMESTAMP" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="save_name" property="saveName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pro_id, material_name, specifications, report_name, material_num, check_result, 
    check_date, file_name, user_id, path, save_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="sys.spvisor.core.entity.work.TQualityReviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_quality_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_quality_review
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_quality_review
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sys.spvisor.core.entity.work.TQualityReviewExample" >
    delete from t_quality_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sys.spvisor.core.entity.work.TQualityReview" useGeneratedKeys="true" keyProperty="id">
    insert into t_quality_review ( pro_id, material_name, 
      specifications, report_name, material_num, 
      check_result, check_date, file_name, 
      user_id, path, save_name
      )
    values (#{proId,jdbcType=INTEGER}, #{materialName,jdbcType=VARCHAR}, 
      #{specifications,jdbcType=VARCHAR}, #{reportName,jdbcType=VARCHAR}, #{materialNum,jdbcType=VARCHAR}, 
      #{checkResult,jdbcType=VARCHAR}, #{checkDate,jdbcType=TIMESTAMP}, #{fileName,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, #{saveName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="sys.spvisor.core.entity.work.TQualityReview" >
    insert into t_quality_review
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="proId != null" >
        pro_id,
      </if>
      <if test="materialName != null" >
        material_name,
      </if>
      <if test="specifications != null" >
        specifications,
      </if>
      <if test="reportName != null" >
        report_name,
      </if>
      <if test="materialNum != null" >
        material_num,
      </if>
      <if test="checkResult != null" >
        check_result,
      </if>
      <if test="checkDate != null" >
        check_date,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="saveName != null" >
        save_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="proId != null" >
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="materialName != null" >
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="reportName != null" >
        #{reportName,jdbcType=VARCHAR},
      </if>
      <if test="materialNum != null" >
        #{materialNum,jdbcType=VARCHAR},
      </if>
      <if test="checkResult != null" >
        #{checkResult,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null" >
        #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="saveName != null" >
        #{saveName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sys.spvisor.core.entity.work.TQualityReviewExample" resultType="java.lang.Integer" >
    select count(*) from t_quality_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_quality_review
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.proId != null" >
        pro_id = #{record.proId,jdbcType=INTEGER},
      </if>
      <if test="record.materialName != null" >
        material_name = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null" >
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.reportName != null" >
        report_name = #{record.reportName,jdbcType=VARCHAR},
      </if>
      <if test="record.materialNum != null" >
        material_num = #{record.materialNum,jdbcType=VARCHAR},
      </if>
      <if test="record.checkResult != null" >
        check_result = #{record.checkResult,jdbcType=VARCHAR},
      </if>
      <if test="record.checkDate != null" >
        check_date = #{record.checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileName != null" >
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.saveName != null" >
        save_name = #{record.saveName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_quality_review
    set id = #{record.id,jdbcType=INTEGER},
      pro_id = #{record.proId,jdbcType=INTEGER},
      material_name = #{record.materialName,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      report_name = #{record.reportName,jdbcType=VARCHAR},
      material_num = #{record.materialNum,jdbcType=VARCHAR},
      check_result = #{record.checkResult,jdbcType=VARCHAR},
      check_date = #{record.checkDate,jdbcType=TIMESTAMP},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      save_name = #{record.saveName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sys.spvisor.core.entity.work.TQualityReview" >
    update t_quality_review
    <set >
      <if test="proId != null" >
        pro_id = #{proId,jdbcType=INTEGER},
      </if>
      <if test="materialName != null" >
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="reportName != null" >
        report_name = #{reportName,jdbcType=VARCHAR},
      </if>
      <if test="materialNum != null" >
        material_num = #{materialNum,jdbcType=VARCHAR},
      </if>
      <if test="checkResult != null" >
        check_result = #{checkResult,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null" >
        check_date = #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="saveName != null" >
        save_name = #{saveName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sys.spvisor.core.entity.work.TQualityReview" >
    update t_quality_review
    set pro_id = #{proId,jdbcType=INTEGER},
      material_name = #{materialName,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      report_name = #{reportName,jdbcType=VARCHAR},
      material_num = #{materialNum,jdbcType=VARCHAR},
      check_result = #{checkResult,jdbcType=VARCHAR},
      check_date = #{checkDate,jdbcType=TIMESTAMP},
      file_name = #{fileName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      save_name = #{saveName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>