<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sys.spvisor.core.dao.ana.UserDao">
	
	<resultMap type="User" id="resultMapUser">
		<id column="user_id" property="id" />
        <result column="user_name" property="name" />
        <result column="user_login_name" property="loginName" />
        <result column="user_login_password" property="loginPassword" />
        <result column="status" property="status" />
        <result column="pwd_err_cnt" property="pwdErrCnt" />
        <result column="expiration_date" property="expirationDate" />
        <result column="mobile" property="mobile" />
        <!-- <result column="phone" property="phone" /> -->
        <result column="email" property="email" />
        <result column="user_work_status_id" property="userWorkStatusId" />
        <result column="memo" property="memo" />
        <result column="create_datetime" property="createDatetime" />
        <result column="update_datetime" property="updateDatetime" />
        <result column="check_status"	 property="checkStatus"/>
        <result column="user_role_flag"	 property="userRoleFlag"/>
	</resultMap>
	
	<select id="getById" parameterType="Long" resultMap="resultMapUser">
		select u.user_id, u.user_login_name, u.user_name, u.user_login_password, u.status,
		u.pwd_err_cnt, u.expiration_date, u.mobile, u.email,u.user_work_status_id, u.memo, u.create_datetime, u.update_datetime,
		u.check_status
			from t_user u where u.user_id = #{id} and u.check_status='O'
	</select>
	
	<select id="checkUser" resultMap="resultMapUser">
		select u.user_id, u.user_login_name, u.user_name, u.user_login_password, u.status, us.status_name, u.pwd_err_cnt, u.expiration_date, u.mobile, u.phone, u.email, u.memo, u.create_datetime, u.update_datetime
			from t_user u, tk_user_status us 
			where u.status=us.status and u.user_name = #{userName} and u.user_login_password = #{password} and u.status='O' and u.check_status='O'
	</select>
	
	<insert id="insert" parameterType="User" keyProperty="id" useGeneratedKeys="true">
    		insert into t_user
    			( user_name, user_login_name, user_login_password, status, pwd_err_cnt, expiration_date, mobile, phone, email, memo, create_datetime, update_datetime,dkey_serial_no, check_status)
    		values
    			( #{name}, #{loginName}, #{loginPassword}, 'O', 0, current_date + interval '1 year', #{mobile}, #{phone}, #{email}, #{memo}, current_timestamp, current_timestamp,#{dkSerialNumber}, 'O')
    </insert>
    
    <update id="update" parameterType="User">
    	update t_user set status = #{status}, 
    	user_name = #{name, jdbcType=VARCHAR},  
    	memo = #{memo, jdbcType=VARCHAR}, 
    	expiration_date = #{expirationDate},
    	update_datetime=current_timestamp,
    	where user_id = #{id}
    </update>
    
    <insert id="insertUserRole">
    	insert into t_user_role ( user_id, role_id)
    	values ( #{userId}, #{roleId})
    </insert>
    
    <select id="queryCount" parameterType="UserCriteria" resultType="int">
		select count(*) from t_user u
		<include refid="queryWhere"></include>
	</select>
	
    <select id="query" parameterType="UserCriteria" resultMap="resultMapUser">
    	select u.user_id, u.user_login_name, u.user_name, u.user_login_password, u.status,u.user_role_flag,
    	u.pwd_err_cnt, u.expiration_date, u.mobile, u.email, u.memo, u.create_datetime, u.update_datetime, u.check_status
			from t_user u 
			<where>
<!-- 			<if test="userId != null">
				and u.user_id = #{userId}
			</if> -->
			<if test="userName!=null and userName!=''">
				and u.user_name like  #{userName}||'%'
			</if>
			<if test="userLoginName !=null and userLoginName !=''">
				and u.user_login_name like  #{userLoginName}||'%'
			</if>
			<!-- <if test="email!=null and email!=''">
				and u.email like  #{email}||'%'
			</if>
			<if test="dkSerialNumber!=null and dkSerialNumber!=''">
			    and u.dkey_serial_no = #{dkSerialNumber}
			</if> -->
			
			and u.check_status='O' 
			</where>
		    order by user_id
		    <if test="paging == true">
		    	limit #{limit} offset #{offset}
		    </if>
    </select>
    
    <delete id="deleteAllUserRole">
    	delete from t_user_role where user_id = #{userId}
    </delete>
    
    <delete id="deleteUserRole">
    	delete from t_user_role where user_id = #{userId} and role_id = #{roleId}
    </delete>
    
    <update id="updatePassword">
    	update t_user set user_login_password = #{newPassword}, update_datetime=current_timestamp
    	where user_id = #{userId}
    </update>

	<sql id="queryWhere">
		<where>
			<!-- <if test="userId != null">
				and u.user_id = #{userId}
			</if> -->
			<if test="userName!=null and userName!=''">
				and u.user_name like  #{userName}||'%'
			</if>
			<if test="userLoginName !=null and userLoginName !=''">
				and u.user_login_name like  #{userLoginName}||'%'
			</if>
			<!-- <if test="email!=null and email!=''">
				and u.email like  #{email}||'%'
			</if>
			<if test="dkSerialNumber!=null and dkSerialNumber!=''">
			    and u.dkey_serial_no = #{dkSerialNumber}
			</if> -->
			and u.check_status='O'
		</where>
	</sql>
	
	<select id="getUserbyLoginname" resultMap="resultMapUser" parameterType="java.lang.String">
		select u.user_id, u.user_login_name, u.user_name, u.user_login_password, u.status, u.pwd_err_cnt, u.expiration_date, u.mobile, u.email, u.memo, u.create_datetime, u.update_datetime
			from t_user u 
			  where u.user_login_name = #{userName}  and u.status='O' and u.check_status='O'
	</select>
</mapper>